"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadPlugin = void 0;
const debug_1 = __importDefault(require("debug"));
const logger = (0, debug_1.default)('earljs:plugins:load');
const expect_1 = require("../expect");
const Expectation_1 = require("../Expectation");
const rules_1 = require("../isEqual/rules");
function loadPlugin(pluginConfig) {
    logger(`Loading plugin: ${getPluginSummary(pluginConfig)}`);
    if (pluginConfig.matchers) {
        logger(`Loading matchers...`);
        (0, expect_1.loadMatchers)(pluginConfig.matchers);
    }
    if (pluginConfig.validators) {
        logger(`Loading validators...`);
        (0, Expectation_1.loadValidators)(pluginConfig.validators);
    }
    if (pluginConfig.smartEqRules) {
        logger(`Loading smart eq rules...`);
        (0, rules_1.loadSmartEqRules)(pluginConfig.smartEqRules);
    }
}
exports.loadPlugin = loadPlugin;
function getPluginSummary(pluginConfig) {
    var _a;
    let out = '';
    out += `Matchers: #${pluginConfig.matchers ? Object.keys(pluginConfig.matchers).length : 0} `;
    out += `Validators: #${pluginConfig.validators ? Object.keys(pluginConfig.validators).length : 0} `;
    out += `SmartEqRules: #${((_a = pluginConfig.smartEqRules) === null || _a === void 0 ? void 0 : _a.length) || 0} `;
    return out;
}
