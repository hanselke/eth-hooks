"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toBeLessThanOrEqualTo = exports.toBeLessThan = exports.toBeGreaterThanOrEqualTo = exports.toBeGreaterThan = void 0;
const format_1 = require("../format");
function toBeGreaterThan(control, target) {
    const actualFmt = (0, format_1.formatCompact)(control.actual);
    const targetFmt = (0, format_1.formatCompact)(target);
    control.assert({
        success: control.actual > target,
        reason: `${actualFmt} is not greater than ${targetFmt}`,
        negatedReason: `${actualFmt} is greater than ${targetFmt}`,
    });
}
exports.toBeGreaterThan = toBeGreaterThan;
function toBeGreaterThanOrEqualTo(control, target) {
    const actualFmt = (0, format_1.formatCompact)(control.actual);
    const targetFmt = (0, format_1.formatCompact)(target);
    control.assert({
        success: control.actual >= target,
        reason: `${actualFmt} is not greater than or equal to ${targetFmt}`,
        negatedReason: `${actualFmt} is greater than or equal to ${targetFmt}`,
    });
}
exports.toBeGreaterThanOrEqualTo = toBeGreaterThanOrEqualTo;
function toBeLessThan(control, target) {
    const actualFmt = (0, format_1.formatCompact)(control.actual);
    const targetFmt = (0, format_1.formatCompact)(target);
    control.assert({
        success: control.actual < target,
        reason: `${actualFmt} is not less than ${targetFmt}`,
        negatedReason: `${actualFmt} is less than ${targetFmt}`,
    });
}
exports.toBeLessThan = toBeLessThan;
function toBeLessThanOrEqualTo(control, target) {
    const actualFmt = (0, format_1.formatCompact)(control.actual);
    const targetFmt = (0, format_1.formatCompact)(target);
    control.assert({
        success: control.actual <= target,
        reason: `${actualFmt} is not less than or equal to ${targetFmt}`,
        negatedReason: `${actualFmt} is less than or equal to ${targetFmt}`,
    });
}
exports.toBeLessThanOrEqualTo = toBeLessThanOrEqualTo;
