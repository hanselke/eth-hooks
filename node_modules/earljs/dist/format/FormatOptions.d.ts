import { EqualityOptions } from '../isEqual';
export interface FormatOptions extends EqualityOptions {
    /**
     * Number of spaces added for each indentation level
     */
    indentSize: number;
    /**
     * Format inline instead of using indentation
     */
    inline: boolean;
    /**
     * Tries to keep the line length under a specific value when inline
     */
    maxLineLength: number;
    /**
     * Never replaces matcher with matched contents
     */
    skipMatcherReplacement: boolean;
    /**
     * Mark top-level objects that aren't strictly equal as different
     */
    requireStrictEquality: boolean;
}
export declare const DEFAULT_FORMAT_OPTIONS: FormatOptions;
export declare const LOOSE_FORMAT_OPTIONS: {
    uniqueNaNs: boolean;
    minusZero: boolean;
    ignorePrototypes: boolean;
    compareErrorStack: boolean;
    /**
     * Number of spaces added for each indentation level
     */
    indentSize: number;
    /**
     * Format inline instead of using indentation
     */
    inline: boolean;
    /**
     * Tries to keep the line length under a specific value when inline
     */
    maxLineLength: number;
    /**
     * Never replaces matcher with matched contents
     */
    skipMatcherReplacement: boolean;
    /**
     * Mark top-level objects that aren't strictly equal as different
     */
    requireStrictEquality: boolean;
};
